What happens when you initialize a repository? Why do you need to do it?

Initializing a repository creates the .git folder so that versions can 
be tracked.  Without this folder, no tracking metadata will be created
(commits will not be understood by Git).



How is the staging area different from the working directory and the repository?
The staging area is a logical space to hold changes until commited,
whereas the working directory is on the hard drive and holds files; 
the repository is the aspect of the working directory that holds 
tracking info/metadata.
What value do you think it offers?
The value of the staging area is that it provides a separate space
for pending changes before the commit happens.  It's like what's held
in working memory for pending changes of other applications, except that
it can be referred to.



How can you use the staging area to make sure you have one commit per logical change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
